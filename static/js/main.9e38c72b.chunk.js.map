{"version":3,"sources":["components/Tabla.js","components/App.js","index.js"],"names":["Tabla","props","renderTabla","infoTabla","map","dato","index","fecha","Date","setDate","getDate","dia","check","ganancias","data-label","toLocaleDateString","inversion","className","state","fechaInicial","this","React","Component","App","porcentaje","calcular","redondear","num","Math","round","Number","EPSILON","calcularGanancias","porcetajeDiario","parseFloat","saldo","parseInt","reinversion","gtot","tabla","packs","trunc","registro","push","setState","onInputChange","e","target","name","value","required","type","onChange","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9e38c72b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Tabla extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {fechaInicial:props.fecha}\r\n    }\r\n    //.toLocaleDateString(\"en-GB\")\r\n\r\n    renderTabla = () => {\r\n        return (\r\n            this.props.infoTabla.map((dato,index) => {\r\n                let fecha = new Date(this.props.fecha);\r\n                fecha.setDate(fecha.getDate()+dato.dia);\r\n                let check = \"\"; //para sabersi poner o no el check para reinvertir\r\n                if (dato.ganancias>=53.5)\r\n                    check = \"large green checkmark icon\";\r\n                return(\r\n                    <tr key={index}>\r\n                        <td data-label=\"Fecha\">{fecha.toLocaleDateString(\"en-GB\")}</td>\r\n                        <td data-label=\"Inversion\">{dato.inversion}</td>\r\n                        <td data-label=\"Ganancias\">{dato.ganancias}</td>\r\n                        <td className=\"center aligned\" data-label=\"Reinvertir\"><i className={check}></i></td>\r\n                    </tr>\r\n                )\r\n            } )\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div><table className=\"ui celled table unstackable\">\r\n                <thead>\r\n                    <tr><th>Fecha</th>\r\n                        <th>Inversion</th>\r\n                        <th>Ganancias</th>\r\n                        <th>Reinvertir</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderTabla()}\r\n                </tbody>\r\n            </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Tabla;","import React from 'react';\r\nimport Tabla from './Tabla';\r\nclass App extends React.Component {\r\n\r\n    state = {inversion:1560, porcentaje:0.714, fecha:\"\",calcular:false, infoTabla:[]};\r\n\r\n    redondear = (num) => {\r\n        return Math.round((num + Number.EPSILON) * 100) / 100;\r\n        //return parseFloat(num.toFixed(2));\r\n    }\r\n    calcularGanancias = () =>{\r\n        let porcetajeDiario = parseFloat(this.state.porcentaje);\r\n        let saldo = parseInt(this.state.inversion);\r\n        let ganancias = 0;\r\n        let dia = 1;\r\n        let reinversion = 0;\r\n        let gtot=0;\r\n        let tabla = [];\r\n        for (dia; dia<=365; dia++){\r\n            ganancias += saldo/100 * porcetajeDiario;\r\n            ganancias = this.redondear(ganancias);\r\n            saldo += reinversion;\r\n            reinversion = 0;\r\n            gtot= ganancias;\r\n            if (ganancias>=53.5){\r\n                let packs = Math.trunc(ganancias/53.5);\r\n                let recompra = 53.5*packs;\r\n                reinversion = 50*packs;\r\n                gtot = ganancias;\r\n                ganancias = ganancias - recompra;\r\n            }\r\n            let registro = {dia,inversion:saldo, ganancias:gtot};\r\n            tabla.push(registro);\r\n            this.setState({infoTabla:tabla});\r\n            //console.log(this.state.infoTabla)\r\n            //await this.setState({infoTabla:this.state.infoTabla.push(registro)})\r\n            //console.log(\"Dia: \"+dia+\" saldo: \"+saldo+\" ganancias: \"+gtot);\r\n        }\r\n\r\n        this.setState({calcular:true});\r\n    }\r\n\r\n    renderTabla = () => {\r\n        if (this.state.calcular){\r\n            return (<div className=\"ui center aligned segment\">\r\n                <Tabla fecha={this.state.fecha} infoTabla={this.state.infoTabla}/>\r\n            </div>);\r\n            }\r\n    }\r\n\r\n    onInputChange = e => {\r\n        if (e.target.name === \"inversion\") {\r\n            this.setState({ inversion: e.target.value });\r\n        }\r\n        if (e.target.name === \"porcentaje\") {\r\n            this.setState({ porcentaje: e.target.value });\r\n        }\r\n        if (e.target.name === \"fecha\") {\r\n            this.setState({ fecha: e.target.value });\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return( \r\n            <div className=\"ui container\">\r\n                <div className=\"ui form\">\r\n                    <div className=\"fields\">\r\n                        <div className=\"field\">\r\n                            <label>Inversion Inicial</label>\r\n                            <input required={true} name=\"inversion\" value={this.state.inversion} type=\"number\" onChange={this.onInputChange} />\r\n                         </div>\r\n                        <div className=\"field\">\r\n                            <label>Porcentaje Diario</label>\r\n                            <input required={true} name=\"porcentaje\" value={this.state.porcentaje} type=\"number\" onChange={this.onInputChange} />\r\n                        </div>\r\n                        <div className=\"field\">\r\n                            <label>Fecha de inicio</label>\r\n                            <input required={true} name=\"fecha\" value={this.state.fecha} type=\"date\" onChange={this.onInputChange} />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"ui button\" type=\"submit\" onClick={()=>{this.calcularGanancias()}}>Generar Tabla</button>\r\n                </div>\r\n                <div>\r\n                    <br/>\r\n                    {this.renderTabla()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}